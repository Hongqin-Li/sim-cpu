{"version":3,"sources":["pipe.js","layout.js","index.js"],"names":["F_stall","F_bubble","D_stat","D_icode","D_ifun","D_rA","D_rB","D_valC","D_valP","D_stall","D_bubble","E_stat","E_icode","E_ifun","E_dstE","E_dstM","E_srcA","E_srcB","E_valA","E_valB","E_valC","E_stall","E_bubble","M_stat","M_icode","M_Cnd","M_dstE","M_dstM","M_valA","M_valE","M_bubble","W_stat","W_icode","W_dstE","W_dstM","W_valM","W_valE","W_stall","W_bubble","f_predPC","f_stat","f_icode","f_ifun","f_rA","f_rB","f_valC","f_valP","d_stat","d_icode","d_ifun","d_valA","d_valB","d_valC","d_dstE","d_dstM","d_srcA","d_srcB","e_stat","e_icode","e_Cnd","e_dstE","e_dstM","e_valA","e_valE","m_stat","m_icode","m_dstE","m_dstM","m_valM","m_valE","imem_error","dmem_error","stats","icodes","regs","breakpoints","Set","Pipe","Object","classCallCheck","this","Memory","createClass","key","value","rtn","length","i","valToHex","registerFile","registers","init","clear","str","code","isValid","hex_addr","addr","parseInt","isNaN","j","setCode","add","delete","has","stepi","time","setTimeout","func","Stat","SINS","SADR","SHLT","console","log","F_predPC","pair","MAX_MEM","x","readMemory","toString","push","slice","RegisterFile","A","VALZERO","B","M","E","srcA","srcB","dstM","dstE","RNONE","IHALT","INOP","IRRMOVQ","IIRMOVQ","IRMMOVQ","IMRMOVQ","IOPQ","IJXX","ICALL","IRET","IPUSHQ","IPOPQ","RRSP","ALUADD","SAOK","SBUB","ZF","SF","OF","alu_cc","set_cc","CC","intToVal","temp","val","undefined","addq","valA","valB","carry","int_sum","str_s","xorq","s","bytes","arguments","ops","a","b","ifun","andq","rtn_sign","a_sign","b_sign","doFetch","instr_valid","need_regids","need_valC","stat","pc","predPC","valC","valP","split","align","icode","rA","rB","check_f_instr_valid","check_f_need_regids","check_f_need_valC","check_f_stat","doDecode","rvalA","rvalB","check_d_dstE","check_d_dstM","check_d_srcA","check_d_srcB","read","d_rvalA","check_d_valA","d_rvalB","check_d_valB","doExecute","cond","alufun","aluA","aluB","valE","check_e_aluA","check_e_aluB","check_e_cond","doMemory","mem_read","mem_write","data_in","valM","check_m_mem_addr","len","writeMemory","resetW","resetM","resetE","resetD","resetF","reset","steps","step","write","load_use_hazard","doControlLogic","stageColor","red","purple","orange","green","blue","runTimeout","speedOpt","colorDel","pipe","breakPoints","theme","createMuiTheme","palette","primary","brown","background","default","grey","typography","useNextVariants","fontSize","fontFamily","join","StageCards","state","grow","stageRegisters","_this","props","onRefresh","in","y","position","ref","index","rect","getBoundingClientRect","randX","Math","random","randY","window","innerWidth","width","innerHeight","height","newPos","setState","changePosition","_this2","timeout","delay","classes","map","name","react_default","createElement","style","zIndex","left","top","Fragment","Grow_default","unmountOnExit","hide","onEnter","newGrow","onEntered","onExit","onExited","Card_default","CardActionArea_default","backgroundColor","CardHeader_default","avatar","Avatar_default","title","CardContent_default","prop","Typography_default","component","React","Component","CodeLayout","parent","getStageRegisters","Paper_default","padding","spacing","unit","overflow","line","address","onContextMenu","onDoubleClick","event","nameMap","target","attributes","isbreakpoint","deleteBreakpoint","toast","fontWeight","addBreakpoint","onMouseEnter","onMouseOut","StageRegistersLayout","_this3","stageStuffs","anchorEl","popText","_this4","List_default","className","list","ListSubheader_default","subHeader","Popover_default","id","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","margin","ListItem_default","button","onClick","currentTarget","ListItemText_default","RegisterFileLayout","r","getRegisterFile","Table_default","table","TableHead_default","TableRow_default","row","TableCell_default","textAlign","flexGrow","TableBody_default","MenuLayout","settingExpanded","openMemory","openAbout","memory","speedMenuOpen","speedIndex","Slide_default","assign","direction","_this7","ListItemIcon_default","Settings_default","Collapse_default","disablePadding","inset","Menu_default","option","MenuItem_default","selected","getMemory","Reorder_default","Divider_default","Info_default","Dialog_default","scroll","keepMounted","TransitionComponent","Transition","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","MainLayout","_this8","possibleConstructorReturn","getPrototypeOf","call","handleUpload","bind","assertThisInitialized","colorDeg","colorL","colorR","textHeight","cardsHide","cardsHalt","fabIn","onFabTransit","fabTooltipOpen","run","drawerOpen","onStageAnimation","stageIn","refreshStage","messageQueue","snackbarOpen","getStageStuffs","textFieldDiv","createRef","msg","msgQueue","fileReader","FileReader","t","onload","result","codeLines","files","readAsText","f","_this9","flag","stepPipe","PC","getPC","refreshStageRegisters","_this10","expanded","e","root","CssBaseline_default","core_styles","Drawer_default","layout_MenuLayout","tabIndex","role","onKeyDown","AppBar_default","appBar","display","alignContent","Toolbar_default","IconButton_default","color","aria-label","icons_Menu_default","Tooltip_default","enterDelay","leaveDelay","fileUpload","click","Add_default","type","accept","visibility","onInput","variant","noWrap","right","Snackbar_default","autoHideDuration","shift","ContentProps","aria-describedby","message","content","layout_StageCards","alignItems","marginBottom","marginRight","layout_CodeLayout","layout_StageRegistersLayout","ExpansionPanel_default","defaultExpanded","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","details","layout_RegisterFileLayout","bottom","layout_TriTooltip","Zoom_default","runPipe","Fab_default","Pause_default","ChevronRight_default","TriTooltip","cnt","_React$createElement","_this12","onOpen","defineProperty","children","withStyles","toolbar","justifyContent","drawer","flexShrink","paddingTop","paper","overflowX","textField","rows","rowsMax","panel","paddingLeft","text","paddingRight","rootElement","document","getElementById","ReactDOM","render","layout"],"mappings":"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","file":"static/js/main.90664125.chunk.js","sourcesContent":["const stats = [\"\", \"SAOK\", \"SADR\", \"SINS\", \"SHLT\", \"SBUB\"];\nconst icodes = [\n  \"HALT\",\n  \"NOP\",\n  \"RRMOVQ\",\n  \"IRMOVQ\",\n  \"RMMOVQ\",\n  \"MRMOVQ\",\n  \"OPQ\",\n  \"JXX\",\n  \"CALL\",\n  \"RET\",\n  \"PUSHQ\",\n  \"IPOPQ\"\n];\nconst regs = [\n  \"rax\",\n  \"rcx\",\n  \"rdx\",\n  \"rbx\",\n  \"rsp\",\n  \"rbp\",\n  \"rsi\",\n  \"rdi\",\n  \"r8\",\n  \"r9\",\n  \"r10\",\n  \"r11\",\n  \"r12\",\n  \"r13\",\n  \"r14\",\n  \"\"\n];\n\nlet breakpoints = new Set();\n\nexport class Pipe {\n  constructor() {\n    this.Memory = Memory;\n  }\n  getRegisterFile() {\n    let rtn = [\"\"];\n    rtn.length = 16;\n    for (let i = 0; i < 16; i++) {\n      rtn[i] = valToHex(registerFile.registers[i]);\n    }\n    return rtn;\n  }\n  init() {\n    init();\n    breakpoints.clear();\n  }\n  setCode(str) {\n    setCode(str);\n    init();\n  }\n  addBreakpoint(str) {\n    breakpoints.add(str);\n  }\n  deleteBreakpoint(str) {\n    breakpoints.delete(str);\n  }\n  hasBreakpoint(str) {\n    return breakpoints.has(str);\n  }\n\n  stepi(i) {\n    return stepi(i);\n  }\n  run(time) {\n    setTimeout(function func() {\n      if (!(Stat == SINS || Stat == SADR || Stat == SHLT)) {\n        stepi(1);\n        console.log(\"step\");\n        setTimeout(func, time);\n      }\n    }, time);\n  }\n  getPC() {\n    return valToHex(F_predPC);\n  }\n  getStat() {\n    return Stat;\n  }\n  //return [ [addr, hex_val ],...]\n  getMemory() {\n    let rtn = [];\n    let pair = [\"addr\", \"hex_val\"];\n    for (let i = ((MAX_MEM - 8) >> 3) << 3; i >= 0; i -= 8) {\n      let x = valToHex(readMemory(i));\n      if (x != \"0\") {\n        let j = i >> 3;\n        pair[0] = i.toString(16);\n        pair[1] = x;\n        rtn.push(pair.slice());\n      }\n    }\n    return rtn;\n  }\n  getStageStuffs() {\n    return [\n      [\n        [\"m_stat\", stats[m_stat]],\n        [\"m_icode\", icodes[m_icode]],\n        [\"m_valE\", valToHex(m_valE)],\n        [\"m_valM\", valToHex(m_valM)],\n        [\"m_dstE\", regs[m_dstE]],\n        [\"m_dstM\", regs[m_dstM]]\n      ],\n      [\n        [\"e_stat\", stats[e_stat]],\n        [\"e_icodes\", icodes[e_icode]],\n        [\"e_Cnd\", e_Cnd ? \"Y\" : \"N\"],\n        [\"e_valE\", valToHex(e_valE)],\n        [\"e_valA\", valToHex(e_valA)],\n        [\"e_dstE\", regs[e_dstE]],\n        [\"e_dstM\", regs[e_dstM]]\n      ],\n      [\n        [\"d_stat\", stats[d_stat]],\n        [\"d_icode\", icodes[d_icode]],\n        [\"d_ifun\", \"\" + d_ifun],\n        [\"d_valC\", valToHex(d_valC)],\n        [\"d_valA\", valToHex(d_valA)],\n        [\"d_valB\", valToHex(d_valB)],\n        [\"d_dstE\", regs[d_dstE]],\n        [\"d_dstM\", regs[d_dstM]],\n        [\"d_srcA\", regs[d_srcA]],\n        [\"d_srcB\", regs[d_srcB]]\n      ],\n      [\n        [\"f_stat\", stats[f_stat]],\n        [\"f_icode\", icodes[f_icode]],\n        [\"f_ifun\", \"\" + f_ifun],\n        [\"f_rA\", regs[f_rA]],\n        [\"f_rB\", regs[f_rB]],\n        [\"f_valC\", valToHex(f_valC)],\n        [\"f_valP\", valToHex(f_valP)]\n      ],\n      [[\"predPC\", valToHex(F_predPC)]]\n    ];\n  }\n\n  getStageRegisters() {\n    return [\n      [\n        [\"stat\", stats[W_stat]],\n        [\"icode\", icodes[W_icode]],\n        [\"valE\", valToHex(W_valE)],\n        [\"valM\", valToHex(W_valM)],\n        [\"dstE\", regs[W_dstE]],\n        [\"dstM\", regs[W_dstM]]\n      ],\n      [\n        [\"stat\", stats[M_stat]],\n        [\"icodes\", icodes[M_icode]],\n        [\"Cnd\", M_Cnd ? \"Y\" : \"N\"],\n        [\"valE\", valToHex(M_valE)],\n        [\"valA\", valToHex(M_valA)],\n        [\"dstE\", regs[M_dstE]],\n        [\"dstM\", regs[M_dstM]]\n      ],\n      [\n        [\"stat\", stats[E_stat]],\n        [\"icode\", icodes[E_icode]],\n        [\"ifun\", \"\" + E_ifun],\n        [\"valC\", valToHex(E_valC)],\n        [\"valA\", valToHex(E_valA)],\n        [\"valB\", valToHex(E_valB)],\n        [\"dstE\", regs[E_dstE]],\n        [\"dstM\", regs[E_dstM]],\n        [\"srcA\", regs[E_srcA]],\n        [\"srcB\", regs[E_srcB]]\n      ],\n      [\n        [\"stat\", stats[D_stat]],\n        [\"icode\", icodes[D_icode]],\n        [\"ifun\", \"\" + D_ifun],\n        [\"rA\", regs[D_rA]],\n        [\"rB\", regs[D_rB]],\n        [\"valC\", valToHex(D_valC)],\n        [\"valP\", valToHex(D_valP)]\n      ],\n      [[\"predPC\", valToHex(F_predPC)]]\n    ];\n  }\n}\n\n/* Classes */\nclass RegisterFile {\n  constructor() {\n    this.A = VALZERO.slice();\n    this.B = VALZERO.slice();\n    this.M = VALZERO.slice();\n    this.E = VALZERO.slice();\n    /*this.B = [\"00\",\"00\",\"00\",\"00\",\"00\",\"00\",\"00\",\"00\"];\n    this.M = [\"00\",\"00\",\"00\",\"00\",\"00\",\"00\",\"00\",\"00\"];\n    this.E = [\"00\",\"00\",\"00\",\"00\",\"00\",\"00\",\"00\",\"00\"];\n    */\n    this.srcA = this.srcB = this.dstM = this.dstE = RNONE;\n    this.registers = [VALZERO.slice()];\n    this.registers.length = 16;\n    for (let i = 0; i < 16; i++) this.registers[i] = this.A;\n    console.log(this.registers);\n  }\n  reset() {\n    this.A = VALZERO.slice();\n    this.B = VALZERO.slice();\n    this.M = VALZERO.slice();\n    this.E = VALZERO.slice();\n    for (let i = 0; i < 16; i++) this.registers[i] = VALZERO.slice();\n    this.srcA = this.srcB = this.dstM = this.dstE = RNONE;\n  }\n  read() {\n    this.A = this.registers[this.srcA].slice();\n    this.B = this.registers[this.srcB].slice();\n  }\n  write() {\n    //!caution, if dstE == dstM(!=RNONE)(e.g. pop %rsp), only to write dstM\n\n    this.registers[this.dstE] = this.E.slice();\n    this.registers[this.dstM] = this.M.slice();\n  }\n}\n\n/* Classes end */\n\nconst MAX_MEM = 800;\n\nconst IHALT = 0,\n  INOP = 1,\n  IRRMOVQ = 2,\n  IIRMOVQ = 3,\n  IRMMOVQ = 4,\n  IMRMOVQ = 5,\n  IOPQ = 6,\n  IJXX = 7,\n  ICALL = 8,\n  IRET = 9,\n  IPUSHQ = 10,\n  IPOPQ = 11;\nconst FNONE = 0;\nconst RNONE = 15,\n  RRSP = 4;\nconst ALUADD = 0;\nconst SAOK = 1,\n  SADR = 2,\n  SINS = 3,\n  SHLT = 4,\n  SBUB = 5;\nconst ZF = 4,\n  SF = 2,\n  OF = 1;\n\nconst VALZERO = [\"00\", \"00\", \"00\", \"00\", \"00\", \"00\", \"00\", \"00\"];\n\n/**  Stage Registers **/\nlet F_predPC = VALZERO.slice(),\n  F_stall,\n  F_bubble;\nlet D_stat, D_icode, D_ifun, D_rA, D_rB, D_valC, D_valP, D_stall, D_bubble;\nlet E_stat,\n  E_icode,\n  E_ifun,\n  E_dstE,\n  E_dstM,\n  E_srcA,\n  E_srcB,\n  E_valA,\n  E_valB,\n  E_valC,\n  E_stall,\n  E_bubble;\nlet M_stat, M_icode, M_Cnd, M_dstE, M_dstM, M_valA, M_valE, M_stall, M_bubble;\nlet W_stat, W_icode, W_dstE, W_dstM, W_valM, W_valE, W_stall, W_bubble;\n\n/** Stage outputs **/\nlet f_predPC,\n  f_stat,\n  f_icode,\n  f_ifun,\n  f_rA,\n  f_rB,\n  f_valC,\n  f_valP,\n  f_stall,\n  f_bubble;\nlet d_stat,\n  d_icode,\n  d_ifun,\n  d_valA,\n  d_valB,\n  d_valC,\n  d_dstE,\n  d_dstM,\n  d_srcA,\n  d_srcB,\n  d_stall,\n  d_bubble;\nlet e_stat, e_icode, e_Cnd, e_dstE, e_dstM, e_valA, e_valE, e_stall, e_bubble;\nlet m_stat, m_icode, m_dstE, m_dstM, m_valM, m_valE, m_stall, m_bubble;\n\nlet imem_error, dmem_error;\nlet Memory = [\"0\"];\nMemory.length = MAX_MEM;\n\nlet registerFile = new RegisterFile();\n\nlet alu_cc;\nlet set_cc;\nlet CC;\nlet Stat;\n\n//everything named val is stored by string array ,each byte\n\n//should be positive;\nfunction intToVal(x) {\n  let rtn = VALZERO.slice();\n  rtn.length = 8;\n  for (let i = 0; i < 8; i++) {\n    let temp = x & 0xff;\n    rtn[i] = temp.toString(16);\n    if (rtn[i].length == 1) rtn[i] = \"0\" + rtn[i];\n    x >>= 8;\n  }\n  return rtn;\n}\n/* return string */\nfunction valToHex(val) {\n  if (val == undefined) return \"0\";\n  let rtn = \"\";\n  let zero_front = true;\n  let i = 7;\n\n  while (i >= 0 && parseInt(val[i], 16) == 0) {\n    i--;\n  }\n  if (i < 0) return \"0\";\n  if (val[i][0] != \"0\") rtn += val[i][0];\n  rtn += val[i][1];\n  for (let j = i - 1; j >= 0; j--) {\n    rtn += val[j][0] + val[j][1];\n  }\n  return rtn;\n}\n//return a val\nfunction addq(valA, valB) {\n  let rtn = VALZERO.slice();\n  rtn.length = 8;\n  let carry = 0;\n  for (let i = 0; i < 8; i++) {\n    let int_sum = parseInt(valA[i], 16) + parseInt(valB[i], 16) + carry;\n    carry = int_sum >> 8;\n    let s = int_sum & 0xff;\n    let str_s = s.toString(16);\n    if (str_s.length == 1) rtn[i] = \"0\" + str_s;\n    else rtn[i] = str_s;\n  }\n  //overflow\n  //if (carry) console.log(\"overflow\");\n\n  return rtn;\n}\nfunction subq(valA, valB) {\n  let rtn = VALZERO.slice();\n  let notB = xorq(valB, [\"ff\", \"ff\", \"ff\", \"ff\", \"ff\", \"ff\", \"ff\", \"ff\"]);\n  return addq(\n    valA,\n    addq(notB, [\"01\", \"00\", \"00\", \"00\", \"00\", \"00\", \"00\", \"00\"])\n  );\n}\nfunction andq(valA, valB) {\n  let rtn = VALZERO.slice();\n  rtn.length = 8;\n  for (let i = 0; i < 8; i++) {\n    let s = parseInt(valA[i], 16) & parseInt(valB[i], 16) & 0xff;\n    rtn[i] = s.toString(16);\n    if (rtn[i].length == 1) rtn[i] = \"0\" + rtn[i];\n  }\n  return rtn;\n}\nfunction xorq(valA, valB) {\n  let rtn = VALZERO.slice();\n  rtn.length = 8;\n  for (let i = 0; i < 8; i++) {\n    let s = (parseInt(valA[i], 16) ^ parseInt(valB[i], 16)) & 0xff;\n    rtn[i] = s.toString(16);\n    if (rtn[i].length == 1) rtn[i] = \"0\" + rtn[i];\n  }\n  return rtn;\n}\n\n/* read eight bytes from memory, return null when error*/\n/* return rtn = [\"00\", \"02\", ...] */\nfunction readMemory(addr, bytes = 8) {\n  if (addr + bytes > MAX_MEM || addr < 0) {\n    return null;\n  }\n  let rtn = VALZERO.slice();\n  rtn.length = bytes;\n  for (let i = 0; i < bytes; i++) {\n    rtn[i] = Memory[addr + i];\n    if (rtn[i] == undefined) rtn[i] = \"00\";\n  }\n  return rtn;\n}\n/* write val into memory e.g. val = [\"00\", \"01\"]*/\nfunction writeMemory(addr, val) {\n  let len = val.length;\n  if (addr + len > MAX_MEM || addr < 0) return null;\n  for (let i = 0; i < len; i++) {\n    Memory[addr + i] = val[i];\n  }\n  return true;\n}\n\nfunction setCode(code) {\n  let isValid = true;\n  for (let i = 0; i < code.length; i++) {\n    if (code[i] == \"\\n\") {\n      isValid = true;\n      continue;\n    }\n    if (\n      isValid &&\n      i + 2 < code.length &&\n      code[i] == \"0\" &&\n      code[i + 1] == \"x\"\n    ) {\n      isValid = false;\n\n      let hex_addr = \"\";\n      let addr;\n      i++;\n      //console.log(\"find it\" + code[i + 2] + code[i + 3] + code[i + 4]);\n      while (code[++i] == \"0\") {}\n      while (code[i] != \":\") hex_addr += code[i++];\n      addr = parseInt(hex_addr, 16);\n      if (isNaN(addr)) {\n        addr = 0;\n      }\n      i += 2;\n      let j;\n      for (j = 0; i + j < code.length && code[i + j] != \" \"; j = j + 2) {\n        Memory[addr + (j >> 1)] = code[i + j];\n        Memory[addr + (j >> 1)] += code[i + j + 1];\n      }\n      i += j - 1;\n    } else isValid = false;\n  }\n}\n\nfunction ops(a, b, ifun) {\n  let rtn;\n  switch (ifun) {\n    case 0:\n      rtn = addq(a, b);\n      break;\n    case 1:\n      rtn = subq(a, b);\n      break;\n    case 2:\n      rtn = andq(a, b);\n      break;\n    case 3:\n      rtn = xorq(a, b);\n      break;\n    default:\n      rtn = null;\n      break;\n  }\n  let rtn_sign = parseInt(rtn[7], 16) >> 7;\n  let a_sign = parseInt(a[7], 16) >> 7;\n  let b_sign = parseInt(b[7], 16) >> 7;\n  alu_cc = 0;\n  if (parseInt(valToHex(rtn), 16) == 0) alu_cc |= ZF;\n  if (rtn_sign == 1) alu_cc |= SF;\n  if (a_sign == b_sign && rtn_sign != a_sign) alu_cc |= OF;\n\n  return rtn;\n}\n\n/* long long */\nfunction check_f_pc() {\n  //!Mispredicted branch. Fetch at incremented PC\n  if (M_icode == IJXX && !M_Cnd) return M_valA;\n  //!Completion of RET instruction\n  else if (W_icode == IRET) return W_valM;\n  //!Default: Use predicted P\n  else return F_predPC;\n}\n// return bool\nfunction check_f_instr_valid(icode, ifun) {\n  switch (icode) {\n    case IJXX:\n    case IRRMOVQ:\n      return ifun < 7;\n    case IOPQ:\n      return ifun < 4;\n    default:\n      return ifun < 1;\n  }\n}\n//return bool\nfunction check_f_need_regids(icode) {\n  switch (icode) {\n    case IHALT:\n    case INOP:\n    case IJXX:\n    case ICALL:\n    case IRET:\n      return false;\n    default:\n      return true;\n  }\n}\n//return bool\nfunction check_f_need_valC(icode) {\n  switch (icode) {\n    case IIRMOVQ:\n    case IRMMOVQ:\n    case IMRMOVQ:\n    case IJXX:\n    case ICALL:\n      return true;\n    default:\n      return false;\n  }\n}\n//return int\nfunction check_f_stat(imem_error, instr_valid, icode) {\n  if (imem_error == true) return SADR;\n  else if (!instr_valid == true) return SINS;\n  else if (icode == IHALT) return SHLT;\n  else return SAOK;\n}\n//return int\nfunction check_d_srcA() {\n  switch (D_icode) {\n    case IRRMOVQ:\n    case IRMMOVQ:\n    case IOPQ:\n    case IPUSHQ:\n      return D_rA;\n    case IPOPQ:\n    case IRET:\n      return RRSP;\n    default:\n      return RNONE;\n  }\n}\n\n//return  int\nfunction check_d_srcB() {\n  switch (D_icode) {\n    case IMRMOVQ:\n    case IRMMOVQ:\n    case IOPQ:\n      return D_rB;\n\n    case IPUSHQ:\n    case IPOPQ:\n    case ICALL:\n    case IRET:\n      return RRSP;\n    default:\n      return RNONE;\n  }\n}\n//return int\nfunction check_d_dstM() {\n  switch (D_icode) {\n    case IMRMOVQ:\n    case IPOPQ:\n      return D_rA;\n    default:\n      return RNONE;\n  }\n}\n//return int\nfunction check_d_dstE() {\n  switch (D_icode) {\n    case IRRMOVQ: //condition move\n    case IIRMOVQ:\n    case IOPQ:\n      return D_rB;\n    case IPUSHQ:\n    case IPOPQ:\n    case ICALL:\n    case IRET:\n      return RRSP;\n    default:\n      return RNONE;\n  }\n}\n//return long long(long long d_rvalA)\nfunction check_d_valA(d_srcA, d_rvalA) {\n  if (D_icode == ICALL || D_icode == IJXX) {\n    return D_valP;\n  } else if (d_srcA == e_dstE) {\n    return e_valE;\n  } else if (d_srcA == M_dstM) {\n    return m_valM;\n  } else if (d_srcA == M_dstE) {\n    return M_valE;\n  } else if (d_srcA == W_dstM) {\n    return W_valM;\n  } else if (d_srcA == W_dstE) {\n    return W_valE;\n  } else return d_rvalA;\n}\n\n//return long long(long long d_rvalB)\nfunction check_d_valB(d_srcB, d_rvalB) {\n  if (d_srcB == e_dstE) {\n    return e_valE;\n  } else if (d_srcB == M_dstM) {\n    return m_valM;\n  } else if (d_srcB == M_dstE) {\n    return M_valE;\n  } else if (d_srcB == W_dstM) {\n    return W_valM;\n  } else if (d_srcB == W_dstE) {\n    return W_valE;\n  } else return d_rvalB;\n}\n\n//long long: return, valA, valC\nfunction check_e_aluA(icode, valA, valC) {\n  switch (icode) {\n    case IRRMOVQ:\n    case IOPQ:\n      return valA;\n\n    case IIRMOVQ:\n    case IRMMOVQ:\n    case IMRMOVQ:\n      return valC;\n\n    case ICALL:\n    case IPUSHQ:\n      return [\"f8\", \"ff\", \"ff\", \"ff\", \"ff\", \"ff\", \"ff\", \"ff\"];\n    //subq(VALZERO.slice());\n\n    case IRET:\n    case IPOPQ:\n      return [\"08\", \"00\", \"00\", \"00\", \"00\", \"00\", \"00\", \"00\"];\n    //other operation don't need aluB\n    default:\n      return VALZERO;\n  }\n}\n//long long: return, valB, valC\nfunction check_e_aluB(icode, valB, valC) {\n  switch (icode) {\n    case IRMMOVQ:\n    case IMRMOVQ:\n    case IOPQ:\n    case ICALL:\n    case IPUSHQ:\n    case IRET:\n    case IPOPQ:\n      return valB;\n\n    case IRRMOVQ:\n    case IIRMOVQ:\n      return VALZERO;\n    //other operation don't need aluB\n    default:\n      return VALZERO;\n  }\n}\n//long long: return, a, b, t\n//!alu_cc global, modify it also\nfunction check_e_valE(alufun, valA, valB) {\n  return ops(valA, valB, alufun);\n}\n\n//return bool\n/************ modify it ***********/\nfunction check_e_cond(ifun) {\n  switch (ifun) {\n    case 1:\n      return CC & (ZF | SF);\n    case 2:\n      return CC & SF;\n    case 3:\n      return CC & ZF;\n    case 4:\n      return !(CC & ZF);\n    case 5:\n      return !(CC & SF);\n    case 6:\n      return !(CC & (ZF | SF));\n    default:\n      return true;\n  }\n}\n\n//long long: return, valA, valE\nfunction check_m_mem_addr(icode, valA, valE) {\n  switch (icode) {\n    case IRMMOVQ:\n    case IPUSHQ:\n    case ICALL:\n    case IMRMOVQ:\n      return valE;\n\n    case IPOPQ:\n    case IRET:\n      return valA;\n    default:\n      return VALZERO;\n  }\n}\n\nfunction doFetch() {\n  /* Stage values */\n  //bool\n  let instr_valid, need_regids, need_valC;\n  //let imem_error;\n\n  let stat;\n\n  /* should be long long */\n  let pc;\n  let predPC;\n  let valC, valP;\n\n  //int\n  let split, align;\n  let icode, ifun;\n  let rA, rB;\n\n  /** Select PC **/\n\n  //now pc is a int\n  pc = parseInt(valToHex(check_f_pc()), 16);\n  //console.log(\"pc is\" + pc);\n  /** Fetch **/\n  split = readMemory(pc, 1);\n  align = readMemory(pc + 1, 1);\n  //console.log(split);\n  //console.log(align);\n  icode = parseInt(split[0][0], 16);\n  ifun = parseInt(split[0][1], 16);\n  //console.log(\"icode: \" + icode + \", ifun\" + ifun);\n\n  //bool\n  instr_valid = check_f_instr_valid(icode, ifun);\n  need_regids = check_f_need_regids(icode);\n  need_valC = check_f_need_valC(icode);\n  //console.log(need_regids);\n  stat = check_f_stat(imem_error, instr_valid, icode);\n\n  rA = need_regids ? parseInt(align[0][0], 16) : RNONE;\n  rB = need_regids ? parseInt(align[0][1], 16) : RNONE;\n\n  valC = need_valC ? readMemory(pc + 1 + need_regids) : VALZERO.slice();\n\n  valP = intToVal(pc + 1 + need_regids + (need_valC << 3));\n\n  predPC =\n    icode == IJXX || icode == ICALL\n      ? intToVal(parseInt(valToHex(valC), 16))\n      : valP;\n\n  /** Update **/\n  f_stat = stat;\n  f_icode = icode;\n  f_ifun = ifun;\n  f_rA = rA;\n  f_rB = rB;\n  f_valC = valC.slice();\n  f_valP = valP.slice();\n  f_predPC = predPC.slice();\n  /*\n  console.log(\"f_stat: \" + f_stat);\n  console.log(\"f_icode: \" + f_icode);\n  console.log(\"f_ifun: \" + f_ifun);\n  console.log(\"f_rA: \" + f_rA);\n  console.log(\"f_rB:\" + f_rB);\n\n  console.log(\"f_valC: \" + f_valC);\n  console.log(\"f_valP: \" + f_valP);\n  console.log(\"f_predPC: \" + f_predPC);*/\n}\nfunction doDecode() {\n  let stat;\n\n  let rvalA, rvalB;\n  let dstE, dstM;\n  let valA, valB;\n\n  let srcA, srcB;\n\n  dstE = check_d_dstE();\n  dstM = check_d_dstM();\n  srcA = check_d_srcA();\n  srcB = check_d_srcB();\n\n  registerFile.srcA = srcA;\n  registerFile.srcB = srcB;\n  ///read registerFile as if it were a combinational logic\n  ///i.e. update the read port A B immediately.\n  registerFile.read();\n\n  //should not be modified;\n  rvalA = registerFile.A;\n  rvalB = registerFile.B;\n\n  /** Sel + Fwd A and Fwd B **/\n  valA = check_d_valA(srcA, rvalA);\n  valB = check_d_valB(srcB, rvalB);\n\n  /** Update **/\n  Stat = W_stat == SBUB ? SAOK : W_stat;\n\n  d_stat = D_stat;\n  d_icode = D_icode;\n  d_ifun = D_ifun;\n  d_valC = D_valC.slice();\n  d_valA = valA.slice();\n  d_valB = valB.slice();\n  d_dstE = dstE;\n  d_dstM = dstM;\n  d_srcA = srcA;\n  d_srcB = srcB;\n\n  /** print **/\n\n  console.log(\"d_stat: \" + d_stat);\n  console.log(\"d_icode: \" + d_icode);\n  console.log(\"d_ifun: \" + d_ifun);\n  console.log(\"d_valC: \" + d_valC);\n  console.log(\"d_valA: \" + d_valA);\n  console.log(\"d_valB: \" + d_valB);\n  console.log(\"d_dstE: \" + d_dstE);\n\n  return 0;\n}\nfunction doExecute() {\n  //alu_cc;//!cc from alu\n  let cond;\n  let alufun;\n  let dstE;\n\n  let aluA, aluB;\n  let valE;\n\n  alufun = E_icode == IOPQ ? E_ifun : ALUADD;\n  aluA = check_e_aluA(E_icode, E_valA, E_valC);\n  aluB = check_e_aluB(E_icode, E_valB, E_valC);\n\n  set_cc =\n    E_icode == IOPQ &&\n    !(\n      m_stat == SADR ||\n      m_stat == SINS ||\n      m_stat == SHLT ||\n      (W_stat == SADR || W_stat == SINS || W_stat == SHLT)\n    );\n\n  //!also update alu_cc\n  valE = ops(aluB, aluA, alufun);\n\n  cond = !!check_e_cond(E_ifun);\n  //!update dstE according to condition codes\n  dstE = E_icode == IRRMOVQ ? (cond ? E_dstE : RNONE) : E_dstE;\n\n  /** Update **/\n  if (set_cc) {\n    CC = alu_cc;\n    console.log(\"updateCC: \" + CC);\n  }\n\n  e_stat = E_stat;\n  e_icode = E_icode;\n  e_Cnd = cond;\n  e_valE = valE.slice();\n  e_valA = E_valA.slice();\n  e_dstE = dstE;\n  e_dstM = E_dstM;\n  /*\n  console.log(\"CC: \" + CC);\n  console.log(\"e_stat: \" + e_stat);\n  console.log(\"e_icode: \" + e_icode);\n  console.log(\"e_Cnd: \" + e_Cnd);\n  console.log(\"e_valE: \" + e_valE);\n  console.log(\"e_valA: \" + e_valA);\n  console.log(\"e_dstE: \" + e_dstE);\n  console.log(\"e_dstM: \" + e_dstM);\n  */\n}\nfunction doMemory() {\n  let stat;\n  dmem_error = false;\n  let mem_read, mem_write;\n  //long long\n  let data_in, addr;\n  let valM = VALZERO.slice();\n\n  mem_read = M_icode == IMRMOVQ || M_icode == IPOPQ || M_icode == IRET;\n  mem_write = M_icode == IRMMOVQ || M_icode == IPUSHQ || M_icode == ICALL;\n\n  addr = parseInt(valToHex(check_m_mem_addr(M_icode, M_valA, M_valE)), 16);\n  data_in = M_valA;\n\n  if (mem_read) valM = readMemory(addr, 8);\n\n  let temp = 1;\n  if (mem_write) {\n    temp = writeMemory(addr, data_in);\n  }\n  if (valM == null || temp == null) dmem_error = true;\n\n  stat = dmem_error ? SADR : M_stat;\n\n  /** Update **/\n  m_stat = stat;\n  m_icode = M_icode;\n  m_valE = M_valE.slice();\n  m_valM = valM.slice();\n  m_dstE = M_dstE;\n  m_dstM = M_dstM;\n\n  console.log(\"\");\n}\nfunction doWriteback() {\n  Stat = W_stat == SBUB ? SAOK : W_stat;\n\n  registerFile.dstE = W_dstE;\n  registerFile.dstM = W_dstM;\n  registerFile.E = W_valE.slice();\n  registerFile.M = W_valM.slice();\n}\n\nfunction doControlLogic() {\n  let mispredicted_branch = E_icode == IJXX && !e_Cnd;\n  let load_use_hazard =\n    (E_icode == IMRMOVQ || E_icode == IPOPQ) &&\n    (E_dstM == d_srcA || E_dstM == d_srcB);\n  let exception =\n    m_stat == SADR ||\n    m_stat == SINS ||\n    m_stat == SHLT ||\n    (W_stat == SADR || W_stat == SINS || W_stat == SHLT);\n\n  F_stall =\n    load_use_hazard || (D_icode == IRET || E_icode == IRET || M_icode == IRET);\n  F_bubble = false;\n\n  D_stall = load_use_hazard;\n  D_bubble =\n    (E_icode == IJXX && !e_Cnd) ||\n    (!(\n      (E_icode == IMRMOVQ || E_icode == IPOPQ) &&\n      (E_dstM == d_srcA || E_dstM == d_srcB)\n    ) &&\n      (D_icode == IRET || E_icode == IRET || M_icode == IRET));\n\n  E_stall = false;\n  E_bubble = mispredicted_branch || load_use_hazard;\n\n  W_stall = W_stat == SADR || W_stat == SINS || W_stat == SHLT;\n  W_bubble = false;\n\n  M_stall = false;\n  M_bubble =\n    W_stat == SADR ||\n    W_stat == SINS ||\n    W_stat == SHLT ||\n    (m_stat == SADR || m_stat == SINS || m_stat == SHLT);\n}\n\nfunction resetW() {\n  W_stall = false;\n  W_bubble = true;\n  W_stat = SBUB;\n  W_icode = INOP;\n  W_valE = VALZERO.slice();\n  W_valM = VALZERO.slice();\n  W_dstE = RNONE;\n  W_dstM = RNONE;\n}\nfunction resetM() {\n  M_stall = false;\n  M_bubble = true;\n  M_stat = SBUB;\n  M_icode = INOP;\n  M_valA = VALZERO.slice();\n  M_valE = VALZERO.slice();\n  M_dstE = RNONE;\n  M_dstM = RNONE;\n  M_Cnd = 0;\n}\nfunction resetE() {\n  E_stall = false;\n  E_bubble = true;\n  E_stat = SBUB;\n  E_icode = INOP;\n  E_ifun = 0;\n  E_valA = VALZERO.slice();\n  E_valB = VALZERO.slice();\n  E_valC = VALZERO.slice();\n  E_srcA = RNONE;\n  E_srcB = RNONE;\n  E_dstE = RNONE;\n  E_dstM = RNONE;\n}\n\nfunction resetD() {\n  D_stall = false;\n  D_bubble = true;\n  D_stat = SBUB;\n  D_icode = INOP;\n  D_ifun = 0;\n  D_rA = RNONE;\n  D_rB = RNONE;\n  D_valC = VALZERO.slice();\n  D_valP = VALZERO.slice();\n}\nfunction resetF() {\n  F_stall = false;\n  F_bubble = true;\n  F_predPC = VALZERO.slice();\n}\n\nfunction updateStageRegisters() {\n  if (W_bubble) {\n    resetW();\n  } else if (!W_stall) {\n    W_stat = m_stat;\n    W_icode = m_icode;\n    W_valE = m_valE.slice();\n    W_valM = m_valM.slice();\n    W_dstE = m_dstE;\n    W_dstM = m_dstM;\n  }\n\n  if (M_bubble) {\n    resetM();\n  } else if (!W_stall) {\n    M_stat = e_stat;\n    M_icode = e_icode;\n    M_valA = e_valA.slice();\n    M_valE = e_valE.slice();\n    M_dstE = e_dstE;\n    M_dstM = e_dstM;\n    M_Cnd = e_Cnd;\n  }\n\n  if (E_bubble) {\n    resetE();\n  } else if (!E_stall) {\n    E_stat = d_stat;\n    E_icode = d_icode;\n    E_ifun = d_ifun;\n    E_valA = d_valA.slice();\n    E_valB = d_valB.slice();\n    E_valC = d_valC.slice();\n    E_srcA = d_srcA;\n    E_srcB = d_srcB;\n    E_dstE = d_dstE;\n    E_dstM = d_dstM;\n  }\n\n  if (D_bubble) {\n    resetD();\n  } else if (!D_stall) {\n    D_stat = f_stat;\n    D_icode = f_icode;\n    D_ifun = f_ifun;\n    D_rA = f_rA;\n    D_rB = f_rB;\n    D_valC = f_valC.slice();\n    D_valP = f_valP.slice();\n  }\n  if (F_bubble) {\n    resetF();\n    //!no stat in regF\n  } else if (!F_stall) F_predPC = f_predPC;\n}\nfunction init() {\n  /** reset registerFile **/\n  registerFile.reset();\n\n  /** reset stage registers**/\n  resetF();\n  resetD();\n  resetE();\n  resetM();\n  resetW();\n\n  /** reset Condition Code **/\n  CC = ZF;\n\n  /** reset Stat **/\n  Stat = SAOK;\n}\n\nfunction printStageRegisters() {\n  console.log(\"[Writeback]\");\n  console.log(\n    \"stat[\" +\n      W_stat +\n      \"] icode[\" +\n      W_icode +\n      \"] valE[\" +\n      W_valE +\n      \"] valM[\" +\n      W_valM +\n      \"] dstE[\" +\n      W_dstE +\n      \"]\" +\n      \"] dstM[\" +\n      W_dstM +\n      \"]\"\n  );\n  console.log(\"[Memory]\");\n  console.log(\n    \"stat[\" +\n      M_stat +\n      \"]  icode[\" +\n      M_icode +\n      \"]  Cnd[\" +\n      M_Cnd +\n      \"]  valE[\" +\n      M_valE +\n      \"]  valA[\" +\n      M_valA +\n      \"]  dstE[\" +\n      M_dstE +\n      \"]  dstM[\" +\n      M_dstM +\n      \"]\"\n  );\n  console.log(\"[Execute]\");\n  console.log(\n    \"stat[\" +\n      E_stat +\n      \"]  icode[\" +\n      E_icode +\n      \"]  ifun[\" +\n      E_ifun +\n      \"]  valC[\" +\n      E_valC +\n      \"]  valA[\" +\n      E_valA +\n      \"]  valB[\" +\n      E_valB +\n      \"]  dstE[\" +\n      E_dstE +\n      \"]  dstM[\" +\n      E_dstM +\n      \"]  srcA[\" +\n      E_srcA +\n      \"]  srcB[\" +\n      E_srcB +\n      \"]\"\n  );\n  console.log(\"[Decode]\");\n  console.log(\n    \"stat[\" +\n      D_stat +\n      \"]  icode[\" +\n      D_icode +\n      \"]  ifun[\" +\n      D_ifun +\n      \"]  rA[\" +\n      D_rA +\n      \"]  rB[\" +\n      D_rB +\n      \"]  valC[\" +\n      D_valC +\n      \"]  valP[\" +\n      D_valP +\n      \"]\"\n  );\n  console.log(\"[Fetch]\");\n  console.log(\"predPC[\" + F_predPC + \"]\");\n}\nfunction stepi(steps) {\n  for (let i = 0; i < steps; i++) {\n    step();\n  }\n  if (Stat == SINS || Stat == SADR || Stat == SHLT) {\n    return Stat;\n  }\n  return 0;\n}\nfunction step() {\n  /** Exception **/\n\n  if (Stat == SINS || Stat == SADR || Stat == SHLT) {\n    return 1;\n  }\n  //console.log(\"clock cycle begins!\");\n  /** clock cycle begins **/\n\n  ///update the stage registers and registerFile\n  updateStageRegisters();\n  registerFile.write();\n\n  ///running pipeline\n  doWriteback();\n  doMemory();\n  doExecute();\n  doDecode();\n  doFetch();\n\n  ///update the control logic\n  doControlLogic();\n\n  /** clock cycle ends **/\n  //console.log(\"clock cycle ends\");\n  //printStageRegisters();\n  //console.log(registerFile);\n  return 0;\n}\n","import React, { Fragment } from \"react\";\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Popover from \"@material-ui/core/Popover\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\n\nimport Zoom from \"@material-ui/core/Zoom\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport red from \"@material-ui/core/colors/red\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport green from \"@material-ui/core/colors/green\";\nimport brown from \"@material-ui/core/colors/brown\";\nimport yellow from \"@material-ui/core/colors/yellow\";\nimport orange from \"@material-ui/core/colors/orange\";\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\nimport purple from \"@material-ui/core/colors/purple\";\n\nimport grey from \"@material-ui/core/colors/grey\";\n\nimport PropTypes from \"prop-types\";\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n  withStyles\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ReorderIcon from \"@material-ui/icons/Reorder\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport { Pipe } from \"./pipe.js\";\nconst appBarTitle = \"COLORFUL CPU\";\n\nconst stats = [\"\", \"SAOK\", \"SADR\", \"SINS\", \"SHLT\", \"SBUB\"];\nconst aboutText =\n  \"A Pipe-line Y86-64 CPU Simulator using React and Matreial-ui by Leehq\";\nlet stageColor = [red[500], purple[500], orange[500], green[500], blue[500]];\n\nlet stageRefreshTimeout = 500;\n\nlet runTimeout = 1000;\nconst speedOpt = [1, 5, 10, 20];\n\nlet colorDel = 1;\nlet pipe = new Pipe();\npipe.init();\nlet breakPoints = new Set();\n\nconst appBarHeight = 70;\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: brown,\n    //secondary: ,\n    background: {\n      default: grey[200]\n    }\n  },\n  typography: {\n    useNextVariants: true,\n    fontSize: 13,\n    fontFamily: [\n      \"Consolas\",\n      \"Courier New\",\n      '\"Microsoft Yahei\"',\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\")\n  }\n});\nconsole.log(theme);\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: grey[200]\n  },\n  appBar: {\n    height: appBarHeight\n  },\n  toolbar: {\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  drawer: {\n    width: 240,\n    flexShrink: 0\n  },\n\n  content: {\n    height: \"100%\",\n    width: \"100%\",\n    backgroundColor: grey[200],\n    paddingTop: appBarHeight + theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 3\n  },\n  table: {\n    width: \"100%\"\n  },\n  row: {},\n  paper: {\n    overflow: \"auto\",\n    padding: 10,\n    height: \"100%\",\n    width: \"100%\"\n  },\n  details: {\n    //justifyItems: \"center\",\n    width: \"100%\",\n    overflowX: \"auto\"\n  },\n  textField: {\n    width: \"100%\",\n    rows: 10,\n    rowsMax: 10\n  },\n  panel: {\n    paddingLeft: 10,\n    overflowX: \"auto\",\n    width: \"100%\"\n    //height: \"100%\"\n  },\n  subHeader: {\n    //backgroundColor:\n    backgroundColor: theme.palette.background.paper\n  },\n  text: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingLeft: theme.spacing.unit * 2,\n    paddingRight: theme.spacing.unit * 2\n  }\n});\n\nclass StageCards extends React.Component {\n  state = {\n    grow: [true, false, false, false, false, false],\n    stageRegisters: this.props.stageRegisters,\n    onRefresh: false,\n    in: true,\n    x: 0,\n    y: 0,\n    position: [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],\n    ref: [undefined, undefined, undefined, undefined, undefined]\n  };\n  changePosition(index) {\n    let rect = this.ref[index].getBoundingClientRect();\n    let randX = Math.random();\n    let randY = Math.random();\n\n    let x =\n      (window.innerWidth / 5 - rect.width / 2) * randX +\n      ((window.innerWidth * 4) / 5 - rect.width / 2) * (1 - randX);\n    let y =\n      (window.innerHeight / 3 - rect.height / 2) * randY +\n      ((window.innerHeight * 2) / 3 - rect.height / 2) * (1 - randY);\n    let newPos = this.state.position;\n    newPos[index][0] = x;\n    newPos[index][1] = y;\n    this.setState({\n      position: newPos\n    });\n  }\n\n  componentDidMount() {\n    for (let i = 0; i < 5; i++) this.changePosition(i);\n  }\n  render() {\n    const time = runTimeout / 10;\n    const timeout = time > 200 ? time : 200;\n    const delay = timeout >> 2;\n    if (this.ref == undefined) {\n      this.ref = [];\n      this.ref.length = 5;\n    }\n\n    const { classes } = this.props;\n    const stages = [\"Write-back\", \"Memory\", \"Execute\", \"Decode\", \"Fetch\"];\n    //console.log(\"render\");\n    const stageRegisters = this.props.stageRegisters;\n\n    //this.setState({refresh:this.props.refresh});\n    return stages.map((name, index) => (\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 10,\n          left: this.state.position[index][0],\n          top: this.state.position[index][1]\n        }}\n        ref={ref => {\n          this.ref[index] = ref;\n        }}\n      >\n        <React.Fragment>\n          <Grow\n            unmountOnExit\n            //mountOnEnter\n\n            in={\n              index == 0 && !this.state.onRefresh\n                ? !this.props.hide\n                : this.state.grow[index]\n            }\n            timeout={timeout}\n            onEnter={() => {\n              //console.log(index+\" enter\");\n              if (index == 0) this.setState({ onRefresh: true });\n              setTimeout(() => {\n                let newGrow = this.state.grow;\n                newGrow[index + 1] = true;\n                this.setState({ grow: newGrow });\n              }, delay);\n            }}\n            onEntered={() => {\n              if (index == 4) {\n                let newGrow = this.state.grow;\n                newGrow[0] = false;\n                this.setState({ grow: newGrow });\n              }\n            }}\n            onExit={() => {\n              //console.log(index+\" exit\");\n              if (index == 0) {\n                this.setState({ onRefresh: true });\n              }\n              setTimeout(() => {\n                let newGrow = this.state.grow;\n                newGrow[index + 1] = false;\n                this.setState({ grow: newGrow });\n              }, delay);\n            }}\n            onExited={() => {\n              //console.log(index + \" exited\");\n              //console.log(\"******set state\");\n              this.changePosition(index);\n              if (index == 4) {\n                this.setState({\n                  onRefresh: false,\n                  stageRegisters: this.props.stageRegisters\n                });\n                if (this.props.hide) return;\n                let newGrow = this.state.grow;\n                newGrow[0] = true;\n                this.setState({ grow: newGrow });\n                //this.setState({ in: true });\n              }\n            }}\n          >\n            <Card>\n              <CardActionArea\n                style={{\n                  backgroundColor:\n                    this.state.stageRegisters[index][0][1] === \"SAOK\" ||\n                    index == 4\n                      ? stageColor[index]\n                      : grey[500]\n                }}\n              >\n                <CardHeader\n                  avatar={\n                    <Avatar\n                      style={{\n                        backgroundColor:\n                          this.state.stageRegisters[index][0][1] === \"SAOK\" ||\n                          index == 4\n                            ? stageColor[index]\n                            : grey[500]\n                      }}\n                    >\n                      {name[0]}\n                    </Avatar>\n                  }\n                  title={name}\n                />\n              </CardActionArea>\n              <CardContent>\n                {this.state.stageRegisters[index].map((prop, index) => (\n                  <Typography component=\"p\">\n                    {prop[1] == \"\" ? \"\" : \"[\" + prop[0] + \"] \" + prop[1] + \" \"}{\" \"}\n                  </Typography>\n                ))}\n              </CardContent>\n            </Card>\n          </Grow>\n        </React.Fragment>\n      </div>\n    ));\n  }\n}\n\nclass CodeLayout extends React.Component {\n  render() {\n    const { classes } = this.props;\n    const parent = this.props.parent;\n    let code = this.props.code;\n    let stageRegisters = pipe.getStageRegisters();\n\n    //displace begin\n    return (\n      <div style={{ height: \"100%\" }}>\n        <Paper\n          style={{\n            padding: theme.spacing.unit * 2,\n            height: \"100%\",\n            overflow: \"auto\"\n          }}\n        >\n          {code.map((line, index) => {\n            let address;\n            if (line.length >= 5 && line[0] == \"0\" && line[1] == \"x\") {\n              let i = 2;\n              address = \"\";\n              while (line[i] == \"0\") {\n                i++;\n              }\n              while (line[i] != \":\") {\n                address += line[i++];\n              }\n              if (address.length == 0) address = \"0\";\n            }\n\n            return (\n              <div>\n                <Typography\n                  addr={address}\n                  //classes={addr}\n                  style={{\n                    //border: \"1px blue solid\",\n                    fontSize: 15\n                  }}\n                  onContextMenu={() => {}}\n                  onDoubleClick={event => {\n                    let nameMap = event.target.attributes;\n                    if (nameMap.addr == undefined) return;\n                    if (event.target.isbreakpoint) {\n                      event.target.isbreakpoint = false;\n                      //delete breakpoint\n                      pipe.deleteBreakpoint(nameMap.addr.value);\n                      breakPoints.delete(nameMap.addr.value);\n                      parent.toast(\n                        \"Delete breakpoint at: 0x\" + nameMap.addr.value\n                      );\n                      event.target.style.fontWeight = \"normal\";\n                    } else {\n                      event.target.isbreakpoint = true;\n                      //add in break point;\n                      pipe.addBreakpoint(nameMap.addr.value);\n                      breakPoints.add(nameMap.addr.value);\n                      parent.toast(\n                        \"Add breakpoint at: 0x\" + nameMap.addr.value\n                      );\n                      event.target.style.fontWeight = \"bold\";\n                    }\n                  }}\n                  onMouseEnter={event => {\n                    //console.log(\"mouse in\");\n                    //console.log(event.clientX);\n                    event.target.style.fontWeight = \"bold\";\n                  }}\n                  onMouseOut={event => {\n                    if (!event.target.isbreakpoint)\n                      event.target.style.fontWeight = \"normal\";\n                  }}\n                >\n                  {line}\n                </Typography>\n              </div>\n            );\n          })}\n          {\n            //}    </List>\n          }{\" \"}\n        </Paper>\n      </div>\n    );\n  }\n}\n\nclass StageRegistersLayout extends React.Component {\n  state = {\n    grow: [true, false, false, false, false, false],\n    stageRegisters: this.props.stageRegisters,\n    stageStuffs: this.props.stageStuffs,\n    onRefresh: false,\n    in: true,\n    anchorEl: null,\n    popText: \"\"\n  };\n\n  render() {\n    const delay = 10;\n    const timeout = 200;\n\n    const { classes } = this.props;\n    const stages = [\"Write-back\", \"Memory\", \"Execute\", \"Decode\", \"Fetch\"];\n    //console.log(\"render\");\n    const stageRegisters = this.props.stageRegisters;\n    const stageStuffs = this.props.stageStuffs;\n    const { anchorEl } = this.state;\n    //this.setState({refresh:this.props.refresh});\n    return (\n      <div style={{ height: \"100%\", width: \"100%\" }}>\n        <Paper style={{ height: \"100%\", overflow: \"auto\" }}>\n          <List className={classes.list}>\n            <ListSubheader className={classes.subHeader}>\n              Stage Registers\n            </ListSubheader>\n\n            <Popover\n              id=\"simple-popper\"\n              open={Boolean(anchorEl)}\n              anchorEl={anchorEl}\n              onClose={() => {\n                this.setState({\n                  anchorEl: null\n                });\n              }}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"center\"\n              }}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"center\"\n              }}\n            >\n              <Typography style={{ margin: theme.spacing.unit * 2 }}>\n                {this.state.popText}\n              </Typography>\n            </Popover>\n\n            {stages.map((name, index) => (\n              <React.Fragment>\n                <Grow\n                  in={\n                    index == 0 && !this.state.onRefresh\n                      ? this.props.hide\n                        ? false\n                        : this.props.in\n                      : this.state.grow[index]\n                  }\n                  timeout={timeout}\n                  onEnter={() => {\n                    //console.log(index+\" enter\");\n                    setTimeout(() => {\n                      let newGrow = this.state.grow;\n                      newGrow[index + 1] = true;\n                      this.setState({ grow: newGrow });\n                    }, delay);\n                  }}\n                  onEntered={() => {\n                    //console.log(index + \" entered \");\n                    //console.log(\" onrefresh\"+this.state.onRefresh);\n                    //console.log(\"props in \"+this.props.in);\n                    if (index == 4) {\n                      this.setState({ onRefresh: false });\n                      this.setState({ in: false });\n                    }\n                  }}\n                  onExit={() => {\n                    //console.log(index+\" exit\");\n                    if (index == 0) {\n                      let newGrow = this.state.grow;\n                      newGrow[0] = false;\n                      this.setState({ grow: newGrow });\n                      this.setState({ onRefresh: true });\n                    }\n                    setTimeout(() => {\n                      let newGrow = this.state.grow;\n                      newGrow[index + 1] = false;\n                      this.setState({ grow: newGrow });\n                    }, delay);\n                  }}\n                  onExited={() => {\n                    //console.log(index + \" exited\");\n                    //console.log(\"******set state\");\n                    if (index == 4) {\n                      let newGrow = this.state.grow;\n                      newGrow[0] = true;\n                      this.setState({ grow: newGrow });\n                      this.setState({\n                        stageRegisters: this.props.stageRegisters\n                      });\n                      //this.setState({ in: true });\n                    }\n                  }}\n                >\n                  <ListItem\n                    button\n                    onClick={event => {\n                      this.setState({\n                        popText: this.props.stageStuffs[index].map(\n                          (prop, index) =>\n                            prop[1] == \"\" || prop[1] == undefined\n                              ? \"\"\n                              : \"[\" + prop[0] + \"] \" + prop[1] + \" \"\n                        ),\n                        anchorEl: event.currentTarget\n                      });\n                    }}\n                  >\n                    <Avatar\n                      style={{\n                        backgroundColor:\n                          this.state.stageRegisters[index][0][1] === \"SAOK\" ||\n                          index == 4\n                            ? stageColor[index]\n                            : grey[500]\n                      }}\n                    >\n                      {\" \"}\n                      {name[0]}\n                    </Avatar>\n\n                    <ListItemText\n                      primary={this.state.stageRegisters[index].map(\n                        (prop, index) =>\n                          prop[1] == \"\"\n                            ? \"\"\n                            : \"[\" + prop[0] + \"] \" + prop[1] + \" \"\n                      )}\n                    />\n                  </ListItem>\n                </Grow>\n              </React.Fragment>\n            ))}\n          </List>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nclass RegisterFileLayout extends React.Component {\n  regs = [\n    \"rax\",\n    \"rcx\",\n    \"rdx\",\n    \"rbx\",\n    \"rsp\",\n    \"rbp\",\n    \"rsi\",\n    \"rdi\",\n    \"r8\",\n    \"r9\",\n    \"r10\",\n    \"r11\",\n    \"r12\",\n    \"r13\",\n    \"r14\",\n    \"rnone\"\n  ];\n  render() {\n    const { classes } = this.props;\n    let r = pipe.getRegisterFile();\n    return (\n      <div style={{ width: \"100%\" }}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow className={classes.row}>\n              {this.regs.map(\n                (name, index) =>\n                  index < 8 && (\n                    <TableCell style={{ textAlign: \"center\", flexGrow: 1 }}>\n                      {name}\n                    </TableCell>\n                  )\n              )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow className={classes.row}>\n              {r.map(\n                (val, index) =>\n                  index < 8 && (\n                    <TableCell style={{ textAlign: \"center\" }}>{val}</TableCell>\n                  )\n              )}\n            </TableRow>\n          </TableBody>\n          <TableHead>\n            <TableRow className={classes.row}>\n              {this.regs.map(\n                (name, index) =>\n                  index >= 8 && (\n                    <TableCell style={{ textAlign: \"center\" }}>\n                      {name}\n                    </TableCell>\n                  )\n              )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow className={classes.row}>\n              {r.map(\n                (val, index) =>\n                  index >= 8 && (\n                    <TableCell style={{ textAlign: \"center\" }}>{val}</TableCell>\n                  )\n              )}\n            </TableRow>\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nclass MenuLayout extends React.Component {\n  state = {\n    settingExpanded: false,\n    openMemory: false,\n    openAbout: false,\n    memory: [],\n    speedMenuOpen: false,\n    anchorEl: null,\n    speedIndex: 0\n  };\n  Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n  }\n\n  render() {\n    const { anchorEl } = this.state;\n    return (\n      <div>\n        <List>\n          <ListItem>\n            <ListItemText primary=\"HELLO\" />\n          </ListItem>\n          <ListItem\n            button\n            onClick={() => {\n              this.setState({ settingExpanded: !this.state.settingExpanded });\n            }}\n          >\n            <ListItemIcon>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Setting\" />\n          </ListItem>\n          <Collapse\n            in={this.state.settingExpanded}\n            timeout=\"auto\"\n            unmountOnExit\n          >\n            <List component=\"div\" disablePadding>\n              <ListItem\n                button\n                onClick={event => {\n                  this.setState({ anchorEl: event.currentTarget });\n                }}\n              >\n                <ListItemText inset primary=\"Speed\" />\n              </ListItem>\n            </List>\n            <Menu\n              id=\"speed-menu\"\n              anchorEl={anchorEl}\n              open={Boolean(anchorEl)}\n              onClose={() => {\n                //runTimeout = 1000/ speedOpt[this.state.speedIndex];\n                //console.log(\"runtimeout:\"+runTimeout);\n                this.setState({ anchorEl: null });\n              }}\n            >\n              {speedOpt.map((option, index) => (\n                <MenuItem\n                  key={option}\n                  selected={index === this.state.speedIndex}\n                  onClick={event => {\n                    runTimeout = 1000 / speedOpt[index];\n                    console.log(\"runtimeout:\" + runTimeout);\n                    this.setState({ speedIndex: index, anchorEl: null });\n                  }}\n                >\n                  {speedOpt[index]}\n                </MenuItem>\n              ))}\n            </Menu>\n          </Collapse>\n\n          <ListItem\n            button\n            onClick={() => {\n              //show stack\n              this.setState({\n                openMemory: true,\n                memory: pipe.getMemory()\n              });\n            }}\n          >\n            <ListItemIcon>\n              <ReorderIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Memory\" />\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          <ListItem\n            button\n            key=\"About\"\n            onClick={() => {\n              this.setState({\n                openAbout: true\n              });\n            }}\n          >\n            <ListItemIcon>\n              <InfoIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"About\" />\n          </ListItem>\n        </List>\n\n        <Dialog\n          open={this.state.openMemory}\n          onClose={() => {\n            this.setState({ openMemory: false });\n          }}\n          scroll=\"paper\"\n          keepMounted\n          TransitionComponent={this.Transition}\n        >\n          <DialogTitle>Memory</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              {this.state.memory.map((pair, index) => {\n                return (\n                  <Typography>{\"0x\" + pair[0] + \": \" + pair[1]}</Typography>\n                );\n              })}\n            </DialogContentText>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={this.state.openAbout}\n          onClose={() => {\n            this.setState({ openAbout: false });\n          }}\n          scroll=\"paper\"\n          keepMounted\n          TransitionComponent={this.Transition}\n        >\n          <DialogTitle>About</DialogTitle>\n          <DialogContent>\n            <DialogContentText>{aboutText}</DialogContentText>\n          </DialogContent>\n          <DialogActions />\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nclass MainLayout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleUpload = this.handleUpload.bind(this);\n    this.state = {\n      colorDeg: 45,\n      colorL: 350,\n      colorR: 25,\n      code: [\"Please upload a .yo file\"],\n      textHeight: \"100%\",\n      cardsHide: false,\n      cardsHalt: false,\n      fabIn: true,\n      onFabTransit: false,\n      fabTooltipOpen: false,\n      run: false,\n      drawerOpen: false,\n      onStageAnimation: false,\n      stageIn: true,\n      refreshStage: false,\n      messageQueue: [],\n      snackbarOpen: false,\n      anchorEl: null,\n      stageRegisters: pipe.getStageRegisters(),\n      stageStuffs: pipe.getStageStuffs(),\n      registerFile: pipe.getRegisterFile()\n    };\n    this.textFieldDiv = React.createRef();\n  }\n  toast(msg) {\n    let msgQueue = this.state.messageQueue;\n    msgQueue.push(msg);\n    this.setState({\n      messageQueue: msgQueue,\n      snackbarOpen: !this.state.snackbarOpen\n    });\n  }\n\n  handleUpload(event) {\n    //console.log(event);\n    let fileReader = new FileReader();\n    let str;\n    let t = this;\n    fileReader.onload = function(event) {\n      //console.log(\"fileReader onload: \" + event);\n      //alert(\"onload\");\n      str = event.target.result;\n      pipe.init();\n      pipe.setCode(str);\n      //console.log(\"init get:\");\n      //console.log(pipe.getStageRegisters);\n      //pipe.stepi(1);\n\n      t.setState({ stageRegisters: pipe.getStageRegisters() });\n      t.setState({ stageRegisters: pipe.getRegisterFile() });\n\n      t.setState({ stageRegisters: pipe.getStageRegisters() });\n      t.setState({ registerFile: pipe.getRegisterFile() });\n      t.setState({ stageIn: false });\n      setTimeout(() => {\n        t.setState({ stageIn: true });\n      }, 10);\n\n      let codeLines = [];\n      let line = \"\";\n      let i = 0;\n      while (i < str.length) {\n        if (str[i] != \"\\n\") {\n          if (str[i] == \" \") line += \"\\xa0\";\n          else line += str[i];\n        } else {\n          codeLines.push(line);\n          line = \"\";\n        }\n        i++;\n      }\n      t.setState({ code: codeLines });\n      //alert(pipe.Memory);\n    };\n    if (event.target.files.length) fileReader.readAsText(event.target.files[0]);\n  }\n  componentDidMount() {\n    // this.setState({ textHeight: this.textFieldDiv.clientHeight });\n    let t = this;\n    setTimeout(function f() {\n      t.setState({\n        colorL: t.state.colorL + colorDel,\n        colorR: t.state.colorR + colorDel\n      });\n      setTimeout(f, 20);\n    }, 20);\n  }\n\n  refreshStageRegisters(flag = 1) {\n    this.setState({ stageRegisters: pipe.getStageRegisters() });\n    this.setState({ registerFile: pipe.getRegisterFile() });\n    this.setState({\n      stageStuffs: pipe.getStageStuffs()\n    });\n    if (flag) {\n      this.setState({ stageIn: false });\n      setTimeout(() => {\n        this.setState({ stageIn: true });\n      }, 100);\n    }\n  }\n\n  /* run til breakpoint */\n  runPipe() {\n    let t = this;\n    let temp = colorDel;\n    colorDel = 10;\n    //t.setState({run:true});\n    setTimeout(function func() {\n      let stat = t.stepPipe(1, 0);\n      let PC = pipe.getPC();\n      if (!t.state.run || stat || breakPoints.has(PC)) {\n        t.toast(\"Stop at: 0x\" + PC);\n        if (t.state.run) {\n          t.setState({\n            fabIn: false\n          });\n        }\n        colorDel = temp;\n        t.refreshStageRegisters();\n        return;\n      }\n\n      setTimeout(func, runTimeout);\n    }, runTimeout);\n  }\n\n  stepPipe(i, flag = 1) {\n    let rtn = pipe.stepi(i);\n    switch (rtn) {\n      case 2:\n        this.toast(\"Address Error!\");\n        return rtn;\n      case 3:\n        this.toast(\"Instruction Invalid!\");\n        return rtn;\n      case 4:\n        this.toast(\"Halt!\");\n        return rtn;\n    }\n    this.refreshStageRegisters(flag);\n    return rtn;\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { anchorEl } = this.state;\n\n    const drawerList = (\n      <div className={classes.list}>\n        <List>\n          <ListItem>\n            <ListItemText primary=\"HELLO\" />\n          </ListItem>\n          <ListItem button>\n            <ListItemText primary=\"Setting\" />\n          </ListItem>\n          <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\n            <ListItem>\n              <ListItemText primary=\"Speed\" onClick={e => {}} />\n            </ListItem>\n            <ListItem>\n              <ListItemText primary=\"Speed\" onClick={e => {}} />\n            </ListItem>\n          </Collapse>\n\n          <ListItem>\n            <ListItemText primary=\"\" />\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          <ListItem button key=\"About\">\n            <ListItemIcon>\n              <InfoIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"About\" />\n          </ListItem>\n        </List>\n      </div>\n    );\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <MuiThemeProvider theme={theme}>\n          <Drawer\n            open={this.state.drawerOpen}\n            onClose={() => {\n              this.setState({ drawerOpen: false });\n            }}\n          >\n            <MenuLayout />\n            <div\n              tabIndex={0}\n              role=\"button\"\n              onClick={() => {\n                this.setState({ drawerOpen: false });\n              }}\n              onKeyDown={() => {\n                this.setState({ drawerOpen: false });\n              }}\n            />\n          </Drawer>\n          <AppBar\n            position=\"fixed\"\n            className={classes.appBar}\n            style={{\n              display: \"flex\",\n              alignContent: \"center\",\n              background:\n                \"linear-gradient(\" +\n                this.state.colorDeg +\n                \"deg, hsl(\" +\n                this.state.colorL +\n                \",50%,60%) 30%, hsl(\" +\n                this.state.colorR +\n                \",50%,60%)  90%)\"\n            }}\n          >\n            <Toolbar style={{ height: \"100%\" }}>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                onClick={() => {\n                  this.setState({ drawerOpen: true });\n                }}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Tooltip title=\"Upload\" enterDelay={1000} leaveDelay={200}>\n                <IconButton\n                  color=\"inherit\"\n                  onClick={() => this.fileUpload.click()}\n                >\n                  <AddIcon />\n                </IconButton>\n              </Tooltip>\n              <input\n                type=\"file\"\n                accept=\".yo\"\n                ref={ref => (this.fileUpload = ref)}\n                style={{ visibility: \"hidden\" }}\n                onInput={this.handleUpload}\n              />\n\n              <Typography\n                variant=\"h6\"\n                color=\"inherit\"\n                noWrap\n                style={{ position: \"absolute\", right: 30 }}\n              >\n                {appBarTitle}\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          {\n            //}toast\n          }\n\n          <Snackbar\n            key={0}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"left\"\n            }}\n            open={this.state.snackbarOpen}\n            autoHideDuration={1000}\n            onClose={() => {\n              this.setState({\n                snackbarOpen: false\n              });\n            }}\n            onExited={() => {\n              let msg = this.state.messageQueue;\n              msg.shift();\n              if (msg.length > 0) {\n                this.setState({\n                  messageQueue: msg,\n                  snackbarOpen: true\n                });\n              }\n            }}\n            ContentProps={{\n              \"aria-describedby\": \"message-id\"\n            }}\n            message={<span id=\"message-id\">{this.state.messageQueue[0]}</span>}\n          />\n\n          <main className={classes.content}>\n            <div>\n              <StageCards\n                stageRegisters={this.state.stageRegisters}\n                classes={classes}\n                hide={!this.state.run}\n              />\n            </div>\n            <div\n              style={{\n                width: \"100%\",\n                height: window.innerHeight - theme.spacing.unit * 20,\n\n                display: \"flex\",\n                alignItems: \"stretch\",\n                marginBottom: theme.spacing.unit * 3\n              }}\n            >\n              <div\n                style={{\n                  //flex: 1,\n                  //flexBasis:10000,\n                  marginRight: theme.spacing.unit * 3,\n                  width: \"60%\"\n                }}\n              >\n                <CodeLayout\n                  classes={classes}\n                  code={this.state.code}\n                  parent={this}\n                />\n              </div>\n\n              <div\n                style={{\n                  //flex:1,\n                  width: \"40%\"\n                }}\n              >\n                <StageRegistersLayout\n                  stageRegisters={this.state.stageRegisters}\n                  stageStuffs={this.state.stageStuffs}\n                  classes={classes}\n                  in={this.state.stageIn}\n                />\n              </div>\n            </div>\n            <div style={{ marginBottom: theme.spacing.unit * 3 }}>\n              <ExpansionPanel defaultExpanded={false} onMouseEnter={e => {}}>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                  <Typography>RegisterFile</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.details}>\n                  {\n                    //mention! add width:100% if wrapped by other labels }\n                  }\n                  <RegisterFileLayout classes={classes} />\n                </ExpansionPanelDetails>\n              </ExpansionPanel>\n            </div>\n          </main>\n          <div\n            style={{\n              zIndex: 1,\n              position: \"fixed\",\n              bottom: 0,\n              right: 0\n            }}\n          >\n            <TriTooltip title=\"Double Click to Run\">\n              <Zoom\n                in={this.state.fabIn}\n                onEntered={() => {\n                  this.setState({\n                    onFabTransit: false\n                  });\n                  if (this.state.run) {\n                    this.runPipe();\n                  }\n                }}\n                onExit={() => {\n                  this.setState({\n                    onFabTransit: true\n                  });\n                }}\n                onExited={() => {\n                  this.setState({\n                    fabIn: true,\n                    run: !this.state.run\n                  });\n                }}\n              >\n                <Fab\n                  color=\"secondary\"\n                  style={{ margin: theme.spacing.unit * 3 }}\n                >\n                  {this.state.run ? (\n                    <PauseIcon\n                      onClick={() => {\n                        //this.toast(\"stepi\");\n                        this.setState({\n                          fabIn: false\n                        });\n                        //this.refreshStageRegisters();\n                      }}\n                    />\n                  ) : (\n                    <ChevronRightIcon\n                      onClick={() => {\n                        //this.toast(\"stepi\");\n                        this.stepPipe(1);\n                      }}\n                      onDoubleClick={() => {\n                        if (this.state.onFabTransit) {\n                          return;\n                        }\n                        this.toast(\"Run\");\n                        this.setState({\n                          fabIn: false\n                        });\n                      }}\n                    />\n                  )}\n                </Fab>\n              </Zoom>\n            </TriTooltip>\n          </div>\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\nclass TriTooltip extends React.Component {\n  state = {\n    open: false,\n    cnt: 3\n  };\n  render() {\n    const props = this.props;\n    return (\n      <Tooltip\n        title={this.props.title}\n        enterDelay={500}\n        leaveDelay={200}\n        onOpen={() => {\n          if (!this.state.cnt) return;\n          this.setState({ cnt: this.state.cnt - 1 });\n          this.setState({ open: true });\n        }}\n        onClose={() => {\n          this.setState({ open: false });\n        }}\n        open={this.state.open}\n        enterDelay={500}\n        leaveDelay={200}\n      >\n        {props.children}\n      </Tooltip>\n    );\n  }\n}\n\nMainLayout.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(MainLayout);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Layout from \"./layout\";\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(<Layout />, rootElement);\n"],"sourceRoot":""}